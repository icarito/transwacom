[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "transwacom"
version = "1.0.0"
description = "Share input devices (Wacom tablets, joysticks) over local network with system tray GUI"
readme = "README.md"
license = {text = "GPL-3.0-or-later"}
authors = [
    {name = "TransWacom Contributors"}
]
maintainers = [
    {name = "TransWacom Contributors"}
]
keywords = [
    "wacom", 
    "tablet", 
    "input", 
    "network", 
    "sharing", 
    "joystick", 
    "linux", 
    "evdev", 
    "uinput"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: X11 Applications",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: System :: Hardware",
    "Topic :: System :: Networking",
    "Topic :: Multimedia :: Graphics :: Editors",
]
requires-python = ">=3.8"
dependencies = [
    "evdev>=1.3.0",
    "zeroconf>=0.38.0", 
    "PyYAML>=6.0",
    "pystray>=0.19.0",
    "Pillow>=9.0.0",
    "PyGObject>=3.42.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
]

[project.urls]
Homepage = "https://github.com/icarito/transwacom"
Repository = "https://github.com/icarito/transwacom.git"
Issues = "https://github.com/icarito/transwacom/issues"
Documentation = "https://github.com/icarito/transwacom#readme"

[project.scripts]
transwacom = "transwacom:main"
transwacom-tray = "tray_app_unified:main"

[tool.setuptools]
py-modules = [
    "transwacom",
    "tray_app_unified", 
    "device_detector",
    "host_input",
    "consumer_device_emulation",
    "transnetwork",
    "config_manager"
]

[tool.setuptools.package-data]
transwacom = ["*.md", "*.txt"]

# Development tools configuration
[tool.black]
line-length = 100
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.coverage.run]
source = ["."]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
